#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
using namespace std;
class Book {
public:
int id;
string title;
string author;
bool isIssued;
Book(int id, string title, string author) : id(id), title(title),
author(author), isIssued(false) {}
void display() {
cout << "ID: " << id << ", Title: " << title << ", Author: " <<
author << ", Status: " << (isIssued ? "Issued" : "Available") << endl;
}
};
class Library {
private:
vector<Book> books;
int findBookById(int id) {
for (int i = 0; i < books.size(); ++i)
{
if (books[i].id == id)
{
}
return i;
}
return -1;
}
public:
void addBook(int id, string title, string author) {
books.push_back(Book(id, title, author));
cout << "Book added successfully." << endl;
}
void searchBookById(int id) {
int index = findBookById(id);
if (index != -1)
{
books[index].display();
}
else
{
cout << "Book not found." << endl;
}
}
void searchBookByTitle(string title)
{
bool found = false;
for (Book &book : books)
{
if (book.title == title)
{
book.display();
found = true;
}
if (!found)
}
{
}
cout << "Book not found." << endl;
}
void issueBook(int id)
{
int index = findBookById(id);
if (index != -1)
{
if (!books[index].isIssued)
{
books[index].isIssued = true;
cout << "Book issued successfully." << endl;
}
else
{
}
cout << "Book is already issued." << endl;
}
else
{
cout << "Book not found." << endl;
}
}
void returnBook(int id) {
int index = findBookById(id);
if (index != -1)
{
if (books[index].isIssued)
{
books[index].isIssued = false;
cout << "Book returned successfully." << endl;
}
else
{
}
cout << "Book was not issued." << endl;
}
else
{
cout << "Book not found." << endl;
}
}
void listAllBooks() {
sort(books.begin(), books.end(), [](Book &a, Book &b)
{
return a.id < b.id;
});
for (Book &book : books)
{
book.display();
}
}
void deleteBook(int id) {
int index = findBookById(id);
if (index != -1)
{
books.erase(books.begin() + index);
cout << "Book deleted successfully." << endl;
}
else
{
cout << "Book not found." << endl;
}
}
};
int main() {
Library library;
int choice, id;
string title, author;
while (true) {
cout << "\nLibrary Management System\n";
cout << "1. Add Book\n";
cout << "2. Search Book by ID\n";
cout << "3. Search Book by Title\n";
cout << "4. Issue Book\n";
cout << "5. Return Book\n";
cout << "6. List All Books\n";
cout << "7. Delete Book\n";
cout << "8. Exit\n";
cout << "Enter your choice: ";
cin >> choice;
switch (choice) {
case 1:
cout << "Enter book ID: ";
cin >> id;
cout << "Enter book title: ";
cin.ignore();
getline(cin, title);
cout << "Enter book author: ";
getline(cin, author);
library.addBook(id, title, author);
break;
}
}
return 0;
}
